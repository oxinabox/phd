#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble

%http://www-rohan.sdsu.edu/~aty/bibliog/latex/floats.html
% Alter some LaTeX defaults for better treatment of figures:
    % See p.105 of "TeX Unbound" for suggested values.
    % See pp. 199-200 of Lamport's "LaTeX" book for details.
    %   General parameters, for ALL pages:
    \renewcommand{\topfraction}{0.9}	% max fraction of floats at top
    \renewcommand{\bottomfraction}{0.8}	% max fraction of floats at bottom
    %   Parameters for TEXT pages (not float pages):
    \setcounter{topnumber}{2}
    \setcounter{bottomnumber}{2}
    \setcounter{totalnumber}{4}     % 2 may work better
    \setcounter{dbltopnumber}{2}    % for 2-column pages
    \renewcommand{\dbltopfraction}{0.9}	% fit big float above 2-col. text
    \renewcommand{\textfraction}{0.07}	% allow minimal text w. figs
    %   Parameters for FLOAT pages (not text pages):
    \renewcommand{\floatpagefraction}{0.7}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
    \renewcommand{\dblfloatpagefraction}{0.7}	% require fuller float pages
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2.5cm
\rightmargin 1.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\s}{\blacktriangleright}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ss}{\triangleright}
\end_inset


\begin_inset FormulaMacro
\newcommand{\e}{\triangleleft}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ee}{\blacktriangleleft}
\end_inset


\begin_inset FormulaMacro
\newcommand{\W}{\mathcal{W}}
\end_inset


\end_layout

\begin_layout Subsection
Modeling the word ordering problem as a world touring journey
\end_layout

\begin_layout Subsubsection
Notation
\end_layout

\begin_layout Standard
To model the word ordering problem as a world touring journey, the following
 notation is used.
\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $\W$
\end_inset

 the bag of words to be ordered, plus the start and end pseudo-words.
 
\end_layout

\begin_layout Itemize
We will write 
\begin_inset Formula $w_{i}\in\W$
\end_inset

 to represent a word from the bag, with arbitrarily assigned subscripts.
 Where a word occurs with multiplicity greater than 1, it is assigned multiple
 subscripts, and each is treated as a distinct word.
\end_layout

\begin_layout Itemize
Each city is a sequence of two words -- a Markov state, consisting of a
 word and its predecessor word.
 This is written as 
\begin_inset Formula $\langle w_{i},w_{j}\rangle\in\W^{2}$
\end_inset


\end_layout

\begin_layout Itemize
The Start city is given by the state 
\begin_inset Formula $\langle\s,\ss\rangle$
\end_inset

, the End city is the state 
\begin_inset Formula $\langle\e,\ee\rangle$
\end_inset

.
\end_layout

\begin_layout Itemize
The countries are given by the sets of all cities that have a given word
 in the second position.
 So the country 
\begin_inset Formula $S(w_{j})\subseteq\W^{2}$
\end_inset

, for word 
\begin_inset Formula $w_{j}$
\end_inset

 is given by 
\begin_inset Formula $S(w_{j})=\{\langle w_{i},w_{j}\rangle\,\mid\,w_{i}\ne w_{j}\,\wedge w_{i}\in\W\}$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Transitions and Cost Model
\end_layout

\begin_layout Standard
The journey and its costs are modeled by:
\end_layout

\begin_layout Itemize
Each city is given by a 
\begin_inset Formula $\langle w_{i},w_{j}\rangle$
\end_inset

 and is allowed to transition only to cities 
\begin_inset Formula $\langle w_{j},w_{k}\rangle$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Such transitions has cost 
\begin_inset Formula $C[\langle w_{i},w_{j}\rangle,\langle w_{j},w_{k}\rangle]=-\log\left(P(w_{k}|w_{i},w_{j}\rangle\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The expression in terms of negative log likelihood makes this problem linear,
 rather than having a product of probability, it is just a sum of these
 negative log likelihood.
 
\end_layout

\end_deeper
\begin_layout Itemize
The table of transitions is given by 
\begin_inset Formula $\tau$
\end_inset

, where 
\begin_inset Formula $\tau[\langle w_{a},w_{b}\rangle,\,\langle w_{c},w_{d}\rangle]=\begin{cases}
1 & \mathrm{if\,transition\,from\,\langle w_{a},w_{b}\rangle,to\,\langle w_{c},w_{d}\rangle\,occurs}\\
0 & \mathrm{otherwise}
\end{cases}$
\end_inset


\end_layout

\begin_layout Itemize
This table of transitions is the set binary variables to be optimized --
 making this a mixed integer linear programming problem.
\end_layout

\begin_layout Itemize
The total cost to be minimized, is given by 
\begin_inset Formula $C_{total}(\tau)=\sum_{\left[\langle w_{a},w_{b}\rangle,\langle w_{c},w_{d}\rangle\right]\in\left(\W^{2}\right)^{2}}\;\tau[\langle w_{a},w_{b}\rangle,\,\langle w_{c},w_{d}\rangle]\cdot C[\langle w_{a},w_{b}\rangle,\,\langle w_{c},w_{d}\rangle]$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The probability of a particular journey (ie of a particular ordering) is
 thus given by 
\begin_inset Formula $P(\tau)=e^{-C_{total}(\tau)}$
\end_inset


\end_layout

\begin_layout Itemize
The word order can be found by following the links, 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $f(n,\tau)=\begin{cases}
\{w_{a}\mid\tau[\langle\s,\ss\rangle,\langle\ss,w_{a}\rangle]=1\}_{1} & n=1\\
\{w_{b}\mid\tau[\langle\ss,f(1,\tau)\rangle,\langle f(1,\tau),w_{b}\rangle]=1\}_{1} & n=2\\
\{w_{c}\mid\tau[\langle f(n-2,\tau),f(n-1,\tau)\rangle,\langle f(n-1,\tau),w_{c}\rangle]=1\}_{1} & n\ge3
\end{cases}$
\end_inset

 
\end_layout

\begin_layout Itemize
(if 
\begin_inset Formula $\tau$
\end_inset

 is valid then, the set is a singleton, 
\begin_inset Formula $\{\}_{1}$
\end_inset

indicates taking the only element)
\end_layout

\begin_layout Itemize
\begin_inset Formula $f(\langle w_{i},w_{j}\rangle,\tau)=\{\langle w_{i},w_{j}\rangle,\langle w_{j},w_{k}\rangle=1\}$
\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection
Constraints
\end_layout

\begin_layout Standard
The requirements of the problem, place various constraints on to X:
\end_layout

\begin_layout Itemize
Markov State consistency 
\begin_inset Formula $\forall\langle w_{a},w_{b}\rangle,\langle w_{c},w_{b}\rangle\in\W^{2}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
if 
\begin_inset Formula $w_{b}\ne w_{c}$
\end_inset

 then 
\begin_inset Formula $\tau[\langle w_{a},w_{b}\rangle,\,\langle w_{c},w_{d}\rangle]=0$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Leave every city entered (except those at the beginning and end):
\begin_inset Newline linebreak
\end_inset


\begin_inset Formula $\forall\langle w_{i},w_{j}\rangle\in\W^{2}\backslash\{\langle\s,\ss\rangle,\langle\e,\ee\rangle\}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\sum_{\langle w_{a},w_{b}\rangle\in\W^{2}}\tau[\langle w_{a},w_{b}\rangle,\,\langle w_{i},w_{j}\rangle]=\sum_{\langle w_{c},w_{d}\rangle\in\W^{2}}\tau[\langle w_{i},w_{j}\rangle,\,\langle w_{c},w_{d}\rangle]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Visit (enter) every country, once.
 
\begin_inset Formula $\forall w_{j}\in\W\backslash\{\s,\ss\}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\sum_{\langle w_{i},w_{j}\rangle\in S(w_{j}\rangle}\sum_{\langle w_{a},w_{b}\rangle\in\W^{2}}\tau[\langle w_{a},w_{b}\rangle,\,\langle w_{i},w_{j}\rangle]=1$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
To allow the feasibility checker to detect if ordering the words is impossible,
 transitions of zero probability are forbidden.
 i.e.

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 if 
\begin_inset Formula $P(w_{n}|w_{n-2},w_{n-1})=0$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
then 
\begin_inset Formula $\tau[\langle w_{n-2},w_{n-1}\rangle,\langle w_{n-1},w_{n}\rangle]=0$
\end_inset

.
 These transitions, if not expressly forbidden, would never occur in an
 optimal solution in any case, as they have infinitely high cost.
\end_layout

\begin_layout Paragraph
Lazy Subtour Elimination Constraints
\end_layout

\begin_layout Standard
The problem as formulated above can be input into the Mixed Integer Linear
 Programming solver.
 However, like similar formulation of the traveling salesman problem, some
 some solutions will have subtours.
 We take the usual method for handling this an use callbacks to impose lazy
 constraints to forbid such solutions at run-time.
 Given a solution 
\begin_inset Formula $\tau$
\end_inset

:
\end_layout

\begin_layout Itemize
The core tour -- which starts at the beginning 
\begin_inset Formula $\langle\s,\ss\rangle$
\end_inset

 and ends at 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\langle\e,\ee\rangle$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
the end can be found.
 This is done by practically following the links from the start node, and
 accumulating them into a set 
\begin_inset Formula $T\subseteq\W^{2}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The selected links found: 
\begin_inset Formula $l(\tau)=\{[\langle w_{i},w_{j}\rangle,\,\langle w_{j},w_{k}\rangle]\in\left(\W^{2}\right)^{2}\;\mid\;\tau[\langle w_{i},w_{j}\rangle,\,\langle w_{j},w_{k}\rangle]\ne0\}$
\end_inset


\end_layout

\begin_layout Itemize
Or more formally: by taking the transitive closure of 
\begin_inset Formula $\{[\langle\s,\ss\rangle,\,\langle\ss,w_{i}\rangle]\in l(\tau)\,|\,\forall w_{i}\in\W\}$
\end_inset

 within 
\begin_inset Formula $\tau_{links}$
\end_inset

.
 (Not that set is initially a singleton before taking the closure.
\begin_inset Formula $\rangle$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
From the core tour, the set of words covered is given by 
\begin_inset Formula $\W_{T}=\{w_{i}\,\mid\,\langle w_{i},w_{j}\rangle\in T\,\}\cup\{\ee\}$
\end_inset

.
 If 
\begin_inset Formula $\mathcal{W_{T}}=\W$
\end_inset

 then there are no subtours and the core-tour is the full world touring
 journey (and the most likely ordering of the words in the bag
\begin_inset Formula $\rangle$
\end_inset

.
 Otherwise, there is a subtour to be eliminated.
\end_layout

\begin_layout Itemize
If there is a subtour, then to eliminate it, a constraint must be added.
 This constraint is that there must be a connection from at least one of
 the cities in the country covered by the core tour to one of the cities
 in the countries not covered.
\end_layout

\begin_deeper
\begin_layout Itemize
The countries covered by the tour are given by 
\begin_inset Formula $S_{T}=\bigcup_{w_{t}\in W_{T}}S(w_{t})$
\end_inset

, and so the subtour elimination constraint is given by 
\begin_inset Formula $\sum_{\langle w_{t1},w_{t2}\rangle\in S_{T}}\sum_{\langle w_{a},w_{b}\rangle\in\W^{2}\backslash S_{T}}\tau[\langle w_{t1},w_{t2}\rangle,\langle w_{a},w_{b}\rangle]\ge1$
\end_inset


\end_layout

\begin_layout Itemize
i.e.
 There must be a transition from one of the nodes of the word-classes covered
 by the core-tour, to one of the nodes of a word-class not covered by the
 core tour.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\end_body
\end_document
