#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsart
\begin_preamble
\usepackage{url}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf5
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2.5cm
\rightmargin 1.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Vector Selection Problem
\end_layout

\begin_layout Author
Lyndon White, Wei Liu
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\argmin}{\operatorname*{argmin}}
{\mathrm{argmin}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\argmax}{\operatorname*{argmax}}
{\mathrm{argmax}}
\end_inset


\end_layout

\begin_layout Definition
the Vector Selection problem is defined on 
\begin_inset Formula $(\mathcal{V},\,\tilde{s},\,d)$
\end_inset

 for
\end_layout

\begin_deeper
\begin_layout Itemize
A finite vocabulary of vectors 
\begin_inset Formula $\mathcal{V}$
\end_inset

, 
\begin_inset Formula $\mathcal{V}\subset\mathbb{R}^{n}$
\end_inset


\end_layout

\begin_layout Itemize
a target vector 
\begin_inset Formula $\tilde{s}$
\end_inset

, 
\begin_inset Formula $\tilde{s}\in\mathbb{R}^{n}$
\end_inset


\end_layout

\begin_layout Itemize
any metric 
\begin_inset Formula $d$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
by
\begin_inset Formula 
\[
\argmin_{\left\{ \forall\tilde{c}\in\mathbb{N}_{0}^{V}\right\} }\:d(\tilde{s},\,\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $V$
\end_inset

 is size of the vocabulary 
\begin_inset Formula $\mathcal{V}$
\end_inset

.
 (~1300 for ATIS2, ~50,000 for Brown, ~10,000 for daily English) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\tilde{x}_{j}$
\end_inset

 is the vector embedding for the jth word in the vocabulary 
\begin_inset Formula $\tilde{x}_{j}\in\mathcal{V}$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Itemize
We can express the embedding vocabulary 
\begin_inset Formula $\mathcal{V}=\{\tilde{x}_{j}\,|\,\forall j\in\mathbb{N}\:\wedge\;1\le j\le V\}\subset\mathbb{R}^{n}$
\end_inset


\end_layout

\begin_layout Itemize
If we treat 
\begin_inset Formula $\mathcal{V}$
\end_inset

 as a matrix with vectors 
\begin_inset Formula $\tilde{x}_{j}$
\end_inset

 for rows,(and treat length 1 vectors as scalars) we get the compact notation
 
\begin_inset Formula 
\[
\argmin_{\left\{ \forall\tilde{c}\in\mathbb{N}_{0}^{J}\right\} }\:d(\tilde{s},\,\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j})=\argmin_{\left\{ \forall\tilde{c}\in\mathbb{N}_{0}^{J}\right\} }\:d(\tilde{s},\,\mathcal{V}\,\tilde{c}^{T})
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $c_{j}$
\end_inset

 is the count of how many times the jth word in the vocabulary occurs.
 
\begin_inset Formula $\tilde{c}\in\mathbb{N}_{0}^{V}$
\end_inset

, so 
\begin_inset Formula $c_{j}\in\mathbb{N}_{0}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $n$
\end_inset

 is the dimensional of the word vectors, 
\begin_inset Formula $n=300$
\end_inset

 in current trials.
 
\end_layout

\end_deeper
\begin_layout Subsection
An Analogy for the problem
\end_layout

\begin_layout Standard
(which may or may not help)
\end_layout

\begin_layout Standard
Imaging you are in a tile shop which as a variety of rectangular (2D) tiles.
 They have many copies of each tile (an unlimited number in-fact), but only
 a finite number of different sizes.
 This tiles have connectors on them, like jigsaw pieces, such that you can
 attach a North/South side to another North/South side even on a tile of
 different size, and similar for the East/West sides.
 But you can't attach a North/South side to a East/West side.
 i.e.
 You can not rotated the tiles.
\end_layout

\begin_layout Standard
You have 2 lengths given as your target when choosing tiles: a North/South
 length, and a East/West length.
\end_layout

\begin_layout Standard
Your task is to select a collection of tiles from the store, such that when
 connected on the north/south and east/west the total length in those directions
 is as close as possible to those to targets.
\end_layout

\begin_layout Standard
A formula is given for how your solution will be judged.
 It takes the form of some distance metric.
 E.g it might be the your distance from the target east/west length with
 your connected tiles, plus your distance from the target north/south length.
 Or maybe accuracy on north/south is twice as important as east/west.
 Or north/south difference squared etc.
 Your task it to minimize that score.
\end_layout

\begin_layout Standard
For example, if the store had 3 types of tiles.
 
\begin_inset Formula $4.1\times4.1$
\end_inset

,
\begin_inset Formula $1.5\times5.0$
\end_inset

 and 
\begin_inset Formula $100\times1$
\end_inset

, and your targets were 
\begin_inset Formula $13.1$
\end_inset

 and 
\begin_inset Formula $20.0$
\end_inset

, and the scoring was Manhattan.
\end_layout

\begin_layout Standard
you might choose one 
\begin_inset Formula $4.1\times4.1$
\end_inset

 tiles and three 
\begin_inset Formula $1.5\times5.0$
\end_inset

 tiles, giving you length totals 
\begin_inset Formula $8.6$
\end_inset

 and 
\begin_inset Formula $19.1$
\end_inset

 and a score of 
\begin_inset Formula $5.4$
\end_inset


\end_layout

\begin_layout Standard
Had you chosen to take an extra 
\begin_inset Formula $4.1\times4.1$
\end_inset

 tile though given totals of 
\begin_inset Formula $12.7$
\end_inset

 and 
\begin_inset Formula $23.2$
\end_inset

 giving a better score of 
\begin_inset Formula $4.5$
\end_inset


\end_layout

\begin_layout Standard
Now generalize it from 2D tiles to hyperblocks of some arbitrary dimensionality.
\end_layout

\begin_layout Subsection
Reduction from Subset sum
\end_layout

\begin_layout Standard
The subset sum problem is well known to be NP-complete.
 First shown in by Karp under the name 
\begin_inset Quotes eld
\end_inset

Knapsack
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "karp1972reducibility"

\end_inset

 which has since come to be used for the more general problem.
\end_layout

\begin_layout Standard
It can be defined with the question: for a given set 
\begin_inset Formula $\mathcal{S}\subset\mathbb{Z}$
\end_inset

, does there exists 
\begin_inset Formula $\mathcal{L}\subseteq\mathcal{S}$
\end_inset

 such that 
\begin_inset Formula $\sum_{l_{i}\in\mathcal{L}}\;l_{i}=0$
\end_inset

?
\end_layout

\begin_layout Standard
We reduce from subset sum to the Vector Selection Problem by showing any
 general solution to the Vector Selection Problem could be used to solve
 subset sum with only linear time additional work.
\end_layout

\begin_layout Claim
\begin_inset CommandInset label
LatexCommand label
name "claim:method"

\end_inset

Any method which can solve the Vector Selection Problem will allow Subset
 sum to be completed with only linear time additional operations
\end_layout

\begin_deeper
\begin_layout Itemize
Let 
\begin_inset Formula $\mathcal{S}=\{w_{1},w_{2},...,w_{m}\}$
\end_inset


\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $\Omega=2m\left(\max_{i\in[1,m]}\,|w_{i}|+1\right)$
\end_inset

 and thus larger than the largest possible sum of elements of 
\begin_inset Formula $\mathcal{S}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Finding this is a linear time operation, the only such operation in this
 method.
\end_layout

\end_deeper
\begin_layout Itemize
Let 
\begin_inset Formula $\omega=\frac{1}{2m}$
\end_inset

 and thus smaller than any element of 
\begin_inset Formula $\mathcal{S}$
\end_inset

, except if 
\begin_inset Formula $0\in\mathcal{S}$
\end_inset

 (in which case the solution is trivial)
\end_layout

\begin_layout Itemize
then we can define an embedding vocabulary 
\begin_inset Formula $\mathcal{V}_{s}$
\end_inset

 from based on 
\begin_inset Formula $\mathcal{S}$
\end_inset

 by
\begin_inset Formula 
\[
\mathcal{V}_{s}=\{\left[\left[w_{i},\,1\right];\:\hat{e}_{i}\right]\,:\,w_{i}\in\mathcal{S}\}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
By imposing some arbitrary total ordering on 
\begin_inset Formula $\mathcal{S}$
\end_inset

.
\end_layout

\begin_layout Itemize
where 
\begin_inset Formula $;$
\end_inset

 is the concatenation operator,
\end_layout

\begin_layout Itemize
and 
\begin_inset Formula $\hat{e}_{i}$
\end_inset

 is the elementary basis unit vector for dimension 
\begin_inset Formula $i$
\end_inset

.
 ie a vector with all zeros, except at index 
\begin_inset Formula $i$
\end_inset

, where it is 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Itemize
i.e.
 we take the image of 
\begin_inset Formula $\mathcal{S}$
\end_inset

 into 
\begin_inset Formula $\mathcal{V}_{S}$
\end_inset

, by the function: 
\begin_inset Formula 
\[
w_{i}\mapsto\left[\begin{array}{c}
w_{i}\\
1\\
0\\
\vdots\\
0
\end{array}\right]+\hat{e}_{i+2}
\]

\end_inset


\end_layout

\begin_layout Itemize
In doing so we map each integer 
\begin_inset Formula $w_{i}$
\end_inset

 in 
\begin_inset Formula $\mathcal{S}$
\end_inset

 to a point in 
\begin_inset Formula $\mathbb{R}^{m+1}$
\end_inset

 where
\end_layout

\begin_deeper
\begin_layout Itemize
the first index is the integer, 
\begin_inset Formula $w_{i}$
\end_inset

,
\end_layout

\begin_layout Itemize
the second a term is used to force a solution that is nonempty to be better
 than an empty solution -- all other things being equal;
\end_layout

\begin_layout Itemize
the remaining 
\begin_inset Formula $m$
\end_inset

 terms are used to force a solution which uses the same element more than
 once to be worse than one which uses it once or zero times.
\end_layout

\end_deeper
\begin_layout Itemize
Note that 
\begin_inset Formula $\mathcal{V}_{S}\subset\mathbb{R}^{m+2}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
we define the target vector by 
\begin_inset Formula $\tilde{s_{s}}=\left[\left[0,m\right];\:0.5\sum_{j=1}^{j=m}\;\hat{e}_{j}\right]=\left(\begin{array}{c}
0\\
m\\
0.5\\
\vdots\\
0.5
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Itemize
we define the distance metric being given by a weighed Manhattan distance
 (i.e.
 weighted L1 Norm).
\begin_inset Formula 
\[
d_{s}\left(\left[\begin{array}{c}
x_{1}\\
x_{2}\\
\vdots\\
x_{n}
\end{array}\right],\left[\begin{array}{c}
y_{1}\\
y_{2}\\
\vdots\\
y_{n}
\end{array}\right]\right)=\left|x_{1}-y_{1}\right|+\omega\left|x_{2}-y_{2}\right|+\Omega\sum_{j=3}^{j=n}\:\left|x_{j}-y_{j}\right|
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We will prove that 
\begin_inset Formula $d_{s}$
\end_inset

 is a metric below.
\end_layout

\end_deeper
\begin_layout Itemize
The procedure for using these once defined to solve subset sum is:
\end_layout

\begin_deeper
\begin_layout Itemize
the Vector Selection Problem for 
\begin_inset Formula $(\mathcal{V}_{s},\tilde{s}_{s},d_{s})$
\end_inset

 is solved getting back 
\begin_inset Formula $\tilde{c}^{\star}$
\end_inset


\end_layout

\begin_layout Itemize
if 
\begin_inset Formula $\tilde{c}^{\star}=\mathbf{0}$
\end_inset

, or 
\begin_inset Formula $\sum_{j=1}^{j=m}\:\tilde{x}_{j,1}c_{j}^{\star}\neq0$
\end_inset

 then no such solution exists, otherwise:
\end_layout

\begin_layout Itemize
such a subset 
\begin_inset Formula $\mathcal{L}\subset\mathcal{S}$
\end_inset

 does exist, and is given by 
\begin_inset Formula $\mathcal{L}=\{w_{i}\in\mathcal{S}\::\:c_{i}^{\star}\ge1\}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Note that it does not matter if 
\begin_inset Formula $c_{i}^{\star}>1$
\end_inset

 as for such cases clipping it to multiplicity 1 is just as optimal.
 Which we will prove below.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
\begin_inset Formula $d_{s}$
\end_inset

 is a metric
\end_layout

\begin_layout Proof
The 
\begin_inset Formula $d_{s}$
\end_inset

 is a special case of 
\begin_inset Formula 
\[
d\left(\left[\begin{array}{c}
x_{1}\\
x_{2}\\
\vdots\\
x_{n}
\end{array}\right],\left[\begin{array}{c}
y_{1}\\
y_{2}\\
\vdots\\
y_{n}
\end{array}\right]\right)=\sum_{1\le j\le n}\:\omega_{i}\,d{}^{\prime}\left(x_{j},y_{j}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
for 
\begin_inset Formula $d{}^{\prime}$
\end_inset

 a metric defined on scalars and 
\begin_inset Formula $\forall i$
\end_inset

 where 
\begin_inset Formula $\omega_{i},x_{i},w_{i}\in\mathbb{R}$
\end_inset

 and 
\begin_inset Formula $\omega_{i}>0$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
Below it is shown that that this is always a metric, and thus 
\begin_inset Formula $d_{s}$
\end_inset

 is a metric, by showing it meets the 3 requirements: of the coincidence
 axiom, being symmetric, and of the triangle inequality.
 The following properties hold for all 
\begin_inset Formula $\tilde{a},\tilde{b},\tilde{c}\in\mathbb{R}^{n}$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
If 
\begin_inset Formula $d$
\end_inset

 follows the coincidence axiom: 
\begin_inset Formula $d(x,y)=0\iff x=y$
\end_inset

.
 This is shown by:
\end_layout

\begin_layout Proof
if 
\begin_inset Formula $\tilde{a}=\tilde{b}$
\end_inset

 then 
\begin_inset Formula $\forall j\in[1,n]$
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $d{}^{\prime}(a_{j},b_{j})=0$
\end_inset

 thus 
\begin_inset Formula $d(\tilde{a},\tilde{b})=0$
\end_inset

.
\end_layout

\begin_layout Proof
and if 
\begin_inset Formula $d(\tilde{a},\tilde{b})=0$
\end_inset

 then as all 
\begin_inset Formula $\forall j\in[1,n]$
\end_inset

 
\begin_inset Formula $w_{j}>0$
\end_inset

, therefore 
\begin_inset Formula $d{}^{\prime}(a_{j},b_{j})=0$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
If 
\begin_inset Formula $d$
\end_inset

 is symmetric then 
\begin_inset Formula $d(x,y)=d(y,x)$
\end_inset

.
 Shown by:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
d(\tilde{a},\tilde{b})=\sum_{j=1}^{j=n}\:\omega_{i}\,d{}^{\prime}\left(a_{j},b_{j}\right)=\sum_{j=1}^{j=n}\:\:\omega_{i}\,d{}^{\prime}\left(b_{j},a_{j}\right)=d(\tilde{b},\tilde{a})
\]

\end_inset


\end_layout

\begin_layout Proof
Thus 
\begin_inset Formula $d$
\end_inset

 is symmetric 
\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
if 
\begin_inset Formula $d$
\end_inset

 follows the triangle inequality then 
\begin_inset Formula $d(x,z)\le d(x,y)+d(y,z)$
\end_inset

.
 
\end_layout

\begin_layout Proof
making use of 
\begin_inset Formula $d{}^{\prime}\left(a_{j},b_{j}\right)+\,d{}^{\prime}\left(b_{j},c_{j}\right)\ge d{}^{\prime}(a_{j},c_{j})$
\end_inset

, It is shown:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align*}
d(\tilde{a},\tilde{b})+d(\tilde{b},\tilde{c}) & =\sum_{1\le j\le n}\:\omega_{i}\,d{}^{\prime}\left(a_{j},b_{j}\right)+\sum_{1\le j\le n}\:\omega_{i}\,d{}^{\prime}\left(b_{j},c_{j}\right)\\
d(\tilde{a},\tilde{b})+d(\tilde{b},\tilde{c}) & =\sum_{1\le j\le n}\:\omega_{i}\left(\,d{}^{\prime}\left(a_{j},b_{j}\right)+\,d{}^{\prime}\left(b_{j},c_{j}\right)\right)\\
d(\tilde{a},\tilde{b})+d(\tilde{b},\tilde{c}) & \le\sum_{1\le j\le n}\:\omega_{i}\left(d{}^{\prime}(a_{j},c_{j})\right)\\
d(\tilde{a},\tilde{b})+d(\tilde{b},\tilde{c}) & \le d(\tilde{a},\tilde{b})
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
Thus 
\begin_inset Formula $d$
\end_inset

 is a metric, and so 
\begin_inset Formula $d_{s}$
\end_inset

 is a metric.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Proof
Show for 
\begin_inset Formula $c_{j}\notin\{0,1\}$
\end_inset

 a better or at least equally good solution can be found for 
\begin_inset Formula $c_{j}^{alt}\in\{0,1\}$
\end_inset


\end_layout

\begin_layout Proof
For a proof by contraction, we assume the existence of some optimal solution
 the Vector Selection Problem, 
\begin_inset Formula $c^{\ast}$
\end_inset

 where for at least one index 
\begin_inset Formula $i$
\end_inset

,
\begin_inset Formula $c_{i}^{\ast}\ge2$
\end_inset

.
 
\end_layout

\begin_layout Proof
Consider also some alternative count vector (which by our assumption, can
 not be more optimal)
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
c^{\prime}=c^{\ast}-\hat{e_{i}}
\]

\end_inset


\end_layout

\begin_layout Proof
That is, 
\begin_inset Formula $c^{\prime}$
\end_inset

 is the same as 
\begin_inset Formula $c^{\ast}$
\end_inset

except that there is one less count for 
\begin_inset Formula $c_{i}^{\ast}$
\end_inset


\end_layout

\begin_layout Proof
recalling 
\begin_inset Formula $\tilde{s}_{s}=\left(\begin{array}{c}
0\\
m\\
0.5\\
\vdots\\
0.5
\end{array}\right)$
\end_inset


\end_layout

\begin_layout Proof
we define the optimal sum of vectors by 
\begin_inset Formula $\tilde{t}^{\ast}$
\end_inset

 
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
\tilde{t}^{\ast}=\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{\ast}=\left[\begin{array}{c}
\left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)\\
\left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)\\
c_{1}^{*}\\
\vdots\\
c_{n}^{*}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Proof
we define the alternative sum of vectors by 
\begin_inset Formula $\tilde{t}^{\prime}$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
\tilde{t}^{\prime}=\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{\prime}=\left(\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{*}\right)-\tilde{x}_{i}=\left[\begin{array}{c}
\left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)-w_{i}\\
\left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)-1\\
c_{1}^{*}\\
\vdots\\
c_{i-1}^{*}\\
c_{i}^{*}-1\\
c_{i+1}^{*}\\
\vdots\\
c_{n}^{*}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Proof
Note: we know that 
\begin_inset Formula $c_{i}^{\ast}>0.5$
\end_inset

 as 
\begin_inset Formula $c_{i}^{\ast}\ge2$
\end_inset

.
 Similarly we know 
\begin_inset Formula $c_{i}^{\prime}\ge0.5$
\end_inset

 for the as 
\begin_inset Formula $c_{i}^{\prime}=c_{i}^{\ast}-1$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
d_{s}(\tilde{s}_{s},\tilde{t}^{\ast})=\begin{array}{cc}
 & \left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-m\right|\\
+ & \Omega\left|c_{1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{i-1}^{*}-0.5\right|\\
+ & \Omega(c_{i}^{*}-0.5)\\
+ & \Omega\left|c_{i+1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{n}^{*}-0.5\right|
\end{array}
\]

\end_inset


\end_layout

\begin_layout Proof
and
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
d_{s}(\tilde{s}_{s},\tilde{t}^{\prime})=\begin{array}{cc}
 & \left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)-w_{i}\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-1-m\right|\\
+ & \Omega\left|c_{1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{i-1}^{*}-0.5\right|\\
+ & \Omega(c_{i}^{*}-0.5-1)\\
+ & \Omega\left|c_{i+1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{n}^{*}-0.5\right|
\end{array}
\]

\end_inset


\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $\tilde{t}^{\ast}$
\end_inset

 from the more optimal solution: 
\begin_inset Formula $d_{s}(\tilde{s}_{s},\tilde{t}^{\prime})-d_{s}(\tilde{s}_{s},\tilde{t}^{\ast})\ge0$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula $\begin{array}{cc}
 & \left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)-w_{i}\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-1-m\right|\\
+ & \Omega\left|c_{1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{i-1}^{*}-0.5\right|\\
+ & \Omega(c_{i+1}^{*}-0.5-1)\\
+ & \Omega\left|c_{i+1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{n}^{*}-0.5\right|
\end{array}-\begin{array}{cc}
 & \left(\sum_{j=1}^{j=m}w_{j}c_{j}^{*}\right)\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-m\right|\\
+ & \Omega\left|c_{1}^{*}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{i-1}^{*}-0.5\right|\\
+ & \Omega(c_{i+1}^{*}-0.5)\\
+ & \Omega\left|c_{i+1}^{*}-0.5\right|\\
+ & \vdots\\
+ & \Omega\left|c_{n}^{*}-0.5\right|
\end{array}\ge0$
\end_inset


\end_layout

\begin_layout Proof
And after canceling terms:
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
-w_{i}+\omega\left(\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-1-m\right|-\left|\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-m\right|\right)-\Omega\ge0
\]

\end_inset


\end_layout

\begin_layout Proof
let 
\begin_inset Formula $K=\left(\sum_{j=1}^{j=m}c_{j}^{*}\right)-m$
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
-w_{i}+\omega\left(\left|K-1\right|-\left|K\right|\right)-\Omega\ge0
\]

\end_inset


\end_layout

\begin_layout Proof
The largest value 
\begin_inset Formula $\left|K-1\right|-\left|K\right|$
\end_inset

 can take is 1.
 (The other cases are 0, and -1, both of which result in the contradiction
 of the sum of 2 and 3 negative values respectively being greater than or
 equal to zero)
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
-w_{i}+\omega-\Omega\ge-w_{i}+\omega\left(\left|K-1\right|-\left|K\right|\right)-\Omega\ge0
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
w_{i}+\Omega\le\omega
\]

\end_inset


\end_layout

\begin_layout Proof
Substituting in the values from the definitions:
\end_layout

\begin_layout Proof
\begin_inset Formula $\Omega=2m\left(\max_{j\in[1,m]}\,|w_{j}|+1\right)$
\end_inset

 and 
\begin_inset Formula $\omega=\frac{1}{2m}$
\end_inset

 
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
w_{i}+2m\left(\max_{j\in[1,m]}\,|w_{j}|\right)+2m\le\frac{1}{2m}
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
2mw_{i}+4m^{2}\left(\max_{j\in[1,m]}\,|w_{j}|\right)+4m^{2}\le1
\]

\end_inset


\end_layout

\begin_layout Proof
Assume 
\begin_inset Formula $w_{i}$
\end_inset

 takes the most negative value possible: 
\begin_inset Formula $w_{i}=-\left(\max_{j\in[1,m]}\,|w_{j}|\right)$
\end_inset

 giving:
\end_layout

\begin_layout Proof
 
\begin_inset Formula 
\[
\left(4m^{2}-2m\right)\left(\max_{j\in[1,m]}\,|w_{j}|\right)+4m^{2}\le2mw_{i}+4m^{2}\left(\max_{j\in[1,m]}\,|w_{j}|\right)+4m^{2}\le1
\]

\end_inset


\end_layout

\begin_layout Proof
As 
\begin_inset Formula $m\ge1,$
\end_inset

 consider it taking that the smallest value it can take (so 
\begin_inset Formula $m=1$
\end_inset

)
\end_layout

\begin_layout Proof
\begin_inset Formula $2\left(\max_{j\in[1,m]}\,|w_{j}|\right)+4\le\left(4m^{2}-2m\right)\left(\max_{j\in[1,m]}\,|w_{j}|\right)+4m^{2}\le1$
\end_inset


\end_layout

\begin_layout Proof
requiring, 
\begin_inset Formula $\max_{j\in[1,m]}\,|w_{j}|\le-\dfrac{3}{2}$
\end_inset


\end_layout

\begin_layout Proof
Which is impossible as the absolute value of an integer is always non-negative.
\end_layout

\begin_layout Proof
Thus a contradiction.
\end_layout

\begin_layout Proof
Thus 
\begin_inset Formula $c^{\prime}$
\end_inset

 is at least as optimal as 
\begin_inset Formula $c^{\ast}$
\end_inset

.
\end_layout

\begin_layout Proof
We may apply this proof to all claimed optimal solutions with a 
\begin_inset Formula $c_{i}>1$
\end_inset

 to show that an equally optimal (or more so), solution has that 
\begin_inset Formula $c_{i}$
\end_inset

 at 1 lower.
\end_layout

\begin_layout Proof
Thus if some solution with any count 
\begin_inset Formula $c_{i}>1$
\end_inset

 is found, it can be transformed into a solution that is equally (or more
 so) optimal, by clipping all counts 
\begin_inset Formula $c_{i}$
\end_inset

 at one.
 
\end_layout

\begin_layout Standard
A finer proof could be developed showing strict inequality and that 
\begin_inset Formula $c^{\prime}$
\end_inset

 yields a strictly better solution that 
\begin_inset Formula $c^{\ast}$
\end_inset


\end_layout

\begin_layout Proof
Proof of Correctness
\end_layout

\begin_layout Proof
let 
\begin_inset Formula $\tilde{c}^{\prime}$
\end_inset

 be the solution to the Vector Selection Problem on 
\begin_inset Formula $(\mathcal{V}_{s},\tilde{s}_{s},d_{s})$
\end_inset


\end_layout

\begin_layout Proof
As it was shown above that for any 
\begin_inset Formula $c_{i}^{\prime}>1$
\end_inset

 an equally optimal solution can be created by clipping 
\begin_inset Formula $c_{i}^{\prime}$
\end_inset

to 1.
\end_layout

\begin_layout Proof
We will thus assume 
\begin_inset Formula $c_{i}^{\prime}\in\{0,1\}$
\end_inset

.
\end_layout

\begin_layout Proof
let 
\begin_inset Formula $L^{\prime}=\{w_{i}\in\mathcal{S}\::\:c_{i}^{\prime}=1\}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Case
Subset Sum Exists, but the Vector Selection Problem based method says it
 does not
\end_layout

\begin_deeper
\begin_layout Standard
We assume for a proof by contradiction that the the Vector Selection Problem
 based method states that no such subset sub exists,
\end_layout

\begin_layout Standard
however it is incorrect and such a subset does and is given by 
\begin_inset Formula $L^{\ast}\subseteq\mathcal{S}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

Then 
\begin_inset Formula $\mathcal{L^{\ast}}$
\end_inset

defines a indicator vector 
\begin_inset Formula $c^{\ast}\in\{0,1\}^{m}$
\end_inset

, given by 
\begin_inset Formula $c_{j}^{\ast}=\begin{cases}
1 & w_{j}\in\mathcal{L}^{\ast}\\
0 & w_{j}\notin\mathcal{L}^{\ast}
\end{cases}$
\end_inset

, where 
\begin_inset Formula $w_{j}$
\end_inset

 is the 
\begin_inset Formula $j$
\end_inset

th element of 
\begin_inset Formula $\mathcal{S}$
\end_inset

.
\end_layout

\begin_layout Standard
so 
\begin_inset Formula $\sum_{j=1}^{j=m}\,w_{j}c_{j}^{\ast}=0$
\end_inset

.
 
\end_layout

\begin_layout Standard
Note also as 
\begin_inset Formula $\mathcal{L^{\ast}}\neq\emptyset$
\end_inset

 (by definition of subset sum) 
\begin_inset Formula $\exists i\in[1,m]$
\end_inset

 such that 
\begin_inset Formula $c_{i}^{\ast}=1$
\end_inset

.
 
\end_layout

\begin_layout Standard
we define 
\begin_inset Formula $\tilde{t}^{\ast}$
\end_inset

 to be the sum of the vectors which correspond to 
\begin_inset Formula $c_{j}^{\ast}$
\end_inset

 by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\tilde{t}^{\ast}=\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{\ast}=\left[\begin{array}{c}
\sum_{j=1}^{j=m}w_{j}c_{j}^{\ast}\\
\sum_{j=1}^{j=m}c_{j}^{\ast}\\
c_{1}^{\ast}\\
\vdots\\
c_{m}^{\ast}
\end{array}\right]=\left[\begin{array}{c}
0\\
\sum_{j=1}^{j=m}c_{j}^{\ast}\\
c_{1}^{\ast}\\
\vdots\\
c_{m}^{\ast}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
and so 
\end_layout

\begin_layout Standard
\begin_inset Formula $d_{s}(\tilde{s},\,\tilde{t}^{\ast})=d_{s}\left(\left[\begin{array}{c}
0\\
m\\
0.5\\
\vdots\\
0.5\\
\vdots\\
0.5
\end{array}\right],\left[\begin{array}{c}
0\\
\sum_{j=1}^{j=m}c_{j}^{\ast}\\
c_{1}^{\ast}\\
\vdots\\
c_{m}^{\ast}
\end{array}\right]\right)=\begin{array}{cc}
 & 0\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)-m\right|\\
+ & \Omega\left|c_{1}^{\ast}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{n}^{\ast}-0.5\right|
\end{array}=\omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)-m\right|+0.5m\Omega$
\end_inset


\end_layout

\begin_layout Standard
since 
\begin_inset Formula $0<\sum_{j=1}^{j=m}c_{j}^{\ast}\le m$
\end_inset

 as it is sum of 
\begin_inset Formula $m$
\end_inset

 variables 
\begin_inset Formula $0\le c_{j}^{\ast}\le1$
\end_inset

 and not all 
\begin_inset Formula $c_{j}^{\ast}=0$
\end_inset

, we can that to simplify to
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d_{s}(\tilde{s},\,\tilde{t}^{\ast})=\omega\left(m-\sum_{j=1}^{j=m}c_{j}^{\ast}\right)+0.5m\Omega
\]

\end_inset


\end_layout

\begin_layout Standard
Now then consider the cases when the method (incorrectly) reports no such
 subset exists:
\end_layout

\begin_layout Case
\begin_inset Formula $\tilde{c}^{\prime}=\left[0,...,0\right]$
\end_inset

 (the zero vector)
\end_layout

\begin_deeper
\begin_layout Standard
We define the total sum of vectors given by 
\begin_inset Formula $\tilde{t}^{\prime}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\tilde{t}^{\prime}=\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{\prime}=\left[\begin{array}{c}
\sum_{j=1}^{j=m}w_{j}c_{j}^{\prime}\\
\sum_{j=1}^{j=m}c_{j}^{\prime}\\
c_{1}^{\prime}\\
\vdots\\
c_{m}^{\prime}
\end{array}\right]=\left[\begin{array}{c}
0\\
0\\
0\\
\vdots\\
0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
So find
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d_{s}(\tilde{s},\,\tilde{t}^{\prime})=Multidimentionald_{s}\left(\left[\begin{array}{c}
0\\
m\\
0.5\\
\vdots\\
0.5\\
\vdots\\
0.5
\end{array}\right],\left[\begin{array}{c}
0\\
0\\
0\\
\vdots\\
0
\end{array}\right]\right)=\omega m+0.5m\Omega
\]

\end_inset


\end_layout

\begin_layout Standard
thus 
\begin_inset Formula $d_{s}(\tilde{s},\,\tilde{t}^{\ast})<d_{s}(\tilde{s},\,\tilde{t}^{\prime})$
\end_inset

 and so 
\begin_inset Formula $c^{\prime}=\left[0,...,0\right]$
\end_inset

 could not have been the solution returned for solving the Vector Selection
 Problem as it is not the correct selection for the argmax.
 Thus a contradiction.
\end_layout

\end_deeper
\begin_layout Case
\begin_inset Formula $\tilde{c}^{\prime}\neq\mathbf{0}$
\end_inset

 thus 
\begin_inset Formula $\sum_{j=1}^{j=m}\:\tilde{x}_{j,1}c_{j}^{\prime}=k$
\end_inset

 for 
\begin_inset Formula $k\neq0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
So thus the method reports that there is no nonempty subset which sums to
 zero; (the closest it can get is summing to 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Standard
We redefine 
\begin_inset Formula $\tilde{t}^{\prime}$
\end_inset

 for this case to be 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\tilde{t}^{\prime}=\sum_{j=1}^{j=V}\:\tilde{x}_{j}c_{j}^{\prime}=\left[\begin{array}{c}
\sum_{j=1}^{j=m}w_{j}c_{j}^{\prime}\\
\sum_{j=1}^{j=m}c_{j}^{\prime}\\
c_{1}^{\prime}\\
\vdots\\
c_{m}^{\prime}
\end{array}\right]=\left[\begin{array}{c}
k\\
\sum_{j=1}^{j=m}c_{j}^{\prime}\\
c_{1}^{\prime}\\
\vdots\\
c_{m}^{\prime}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
and so
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d_{s}(\tilde{s},\,\tilde{t}^{\prime})=d_{s}(\left[\begin{array}{c}
0\\
m\\
0.5\\
\vdots\\
0.5\\
\vdots\\
0.5
\end{array}\right],\left[\begin{array}{c}
k\\
\sum_{j=1}^{j=m}c_{j}^{\prime}\\
c_{1}^{\prime}\\
\vdots\\
c_{m}^{\prime}
\end{array}\right])=\begin{array}{cc}
 & \left|k\right|\\
_{+} & \omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\prime}\right)-m\right|\\
+ & \Omega\left|c_{1}^{\prime}-0.5\right|\\
 & \vdots\\
+ & \Omega\left|c_{n}^{\prime}-0.5\right|
\end{array}=\left|k\right|+\omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\prime}\right)-m\right|+0.5m\Omega
\]

\end_inset


\end_layout

\begin_layout Standard
As 
\begin_inset Formula $c^{\prime}$
\end_inset

was selected over 
\begin_inset Formula $c^{\ast}$
\end_inset

 then
\end_layout

\begin_layout Standard
by our
\end_layout

\begin_layout Standard
recalling:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d_{s}(\tilde{s},\,\tilde{t}^{\ast})=\omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)-m\right|+0.5m\Omega
\]

\end_inset


\end_layout

\begin_layout Standard
as 
\begin_inset Formula $\tilde{t}^{\prime}$
\end_inset

 is the sum of vectors giving min value for the distance to the target point
 
\begin_inset Formula $\tilde{s_{s}}$
\end_inset

 thus 
\begin_inset Formula 
\[
d_{s}(\tilde{s_{s}},\,\tilde{t}^{\prime})\le d_{s}(\tilde{s_{s}},\,\tilde{t}^{\ast})
\]

\end_inset


\end_layout

\begin_layout Standard
i.e.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|k\right|+\omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\prime}\right)-m\right|+0.5m\Omega\le\omega\left|\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)-m\right|+0.5m\Omega
\]

\end_inset


\end_layout

\begin_layout Standard
let 
\begin_inset Formula $C^{\prime}=\left(\sum_{j=1}^{j=m}c_{j}^{\prime}\right)$
\end_inset

 and 
\begin_inset Formula $C^{\ast}=\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)$
\end_inset


\end_layout

\begin_layout Standard
as 
\begin_inset Formula $0\le C^{\prime}\le m$
\end_inset

 and 
\begin_inset Formula $0\le C^{\ast}\le m$
\end_inset

 as both are sums of indicator variables (0,1)
\end_layout

\begin_layout Standard
\begin_inset Formula $\left|\left(\sum_{j=1}^{j=m}c_{j}^{\ast}\right)-m\right|=\left|C^{\ast}-m\right|=m-C^{*}$
\end_inset

 and similarly for 
\begin_inset Formula $C^{\prime}$
\end_inset


\end_layout

\begin_layout Standard
substituting in:
\end_layout

\begin_layout Standard
\begin_inset Formula $\left|k\right|+\omega\left(m-C^{\prime}\right)+0.5m\Omega\le\omega\left(m-C^{\ast}\right)+0.5m\Omega$
\end_inset


\end_layout

\begin_layout Standard
i.e 
\begin_inset Formula $\left|k\right|+\omega C^{\prime}\le\omega C^{\ast}$
\end_inset


\end_layout

\begin_layout Standard
i.e 
\begin_inset Formula $\left|k\right|\le\omega\left(C^{\ast}-C^{\prime}\right)$
\end_inset


\end_layout

\begin_layout Standard
thus 
\begin_inset Formula $\left(C^{\ast}>C^{\prime}\right)$
\end_inset

 it can not be equal as otherwise 
\begin_inset Formula $k=0$
\end_inset

 which would be a contradiction.
\end_layout

\begin_layout Standard
let 
\begin_inset Formula $\left(C^{\ast}-C^{\prime}\right)=C_{d}$
\end_inset

, 
\begin_inset Formula $C_{d}\in\mathbb{N}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $0<C_{d}$
\end_inset

 as otherwise 
\begin_inset Formula $\left|k\right|=0$
\end_inset

 (which would be the contradiction)
\end_layout

\begin_layout Standard
\begin_inset Formula $C_{d}\le m$
\end_inset

 as the largest case is 
\begin_inset Formula $C^{*}=m$
\end_inset

 and 
\begin_inset Formula $C^{\prime}=0$
\end_inset


\end_layout

\begin_layout Standard
Substitute
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|k\right|\le\omega C_{d}
\]

\end_inset


\end_layout

\begin_layout Standard
substitute from the definition of 
\begin_inset Formula $\omega=\frac{1}{2m}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|k\right|\le\frac{1}{2m}C_{d}
\]

\end_inset


\end_layout

\begin_layout Standard
consider the largest value 
\begin_inset Formula $C_{d}$
\end_inset

 can take: 
\begin_inset Formula $C_{d}=m$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left|k\right|\le\frac{m}{2m}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
|k|\le\frac{1}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
As 
\begin_inset Formula $k$
\end_inset

 is an integer this would mean 
\begin_inset Formula $k=0$
\end_inset


\end_layout

\begin_layout Standard
But this is a contradiction as 
\begin_inset Formula $|k|>0$
\end_inset

.
\end_layout

\begin_layout Standard
Therefore it is not possible for the the Vector Selection Problem based
 method to say there is no solution if there is a solution.
\end_layout

\begin_layout Standard
i.e.
 if a solution exists, the the Vector Selection Problem based method will
 find it.
\end_layout

\end_deeper
\end_deeper
\begin_layout Case
Case: Subset sum does not exists, but the Vector Selection Problem based
 method says it does
\end_layout

\begin_deeper
\begin_layout Standard
Then:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{j=1}^{j=m}\:\tilde{x}_{j,1}c_{j}^{\prime}=0
\]

\end_inset

.
 
\end_layout

\begin_layout Standard
We know that 
\begin_inset Formula $\tilde{c}^{\prime}\ne\mathbf{0}$
\end_inset

 as other wise the the Vector Selection Problem based method would have
 said no solution exists.
\end_layout

\begin_layout Standard
Thus 
\begin_inset Formula $\mathcal{L}^{\prime}\neq\emptyset$
\end_inset


\end_layout

\begin_layout Standard
further we know by definition of 
\begin_inset Formula $\tilde{x_{j}}$
\end_inset

 that 
\begin_inset Formula $\tilde{x}_{j,1}=w_{j}$
\end_inset

 for 
\begin_inset Formula $w_{j}\in\mathcal{S}$
\end_inset


\end_layout

\begin_layout Standard
thus we have 
\begin_inset Formula $\sum_{j=1}^{j=m}\:w_{j}c_{j}^{\prime}=0$
\end_inset


\end_layout

\begin_layout Standard
thus in fact the sum of the elements of 
\begin_inset Formula $\mathcal{L}^{\prime}$
\end_inset

 is zero.
\end_layout

\begin_layout Standard
And so a subset sum does exist.
\end_layout

\begin_layout Standard
This is a contradiction, thus the the Vector Selection Problem based method
 will never say there is a solution unless one exists.
\end_layout

\end_deeper
\begin_layout Standard
Thus the method described in Claim 
\begin_inset CommandInset ref
LatexCommand formatted
reference "claim:method"

\end_inset

 is a correct method to solve subset sum.
\end_layout

\end_deeper
\begin_layout Subsubsection
Subset Sum Reduction Concluding note:
\end_layout

\begin_layout Standard
Thus it has been shown that if a general solution to the vector selection
 problem can be found a solution to subset sum could be found which would
 take at most a linear amount of additional time.
 Thus were a polynomial time solution for the Vector Selection Problem found,
 it would show that 
\begin_inset Formula $P=NP$
\end_inset

.
 However, the proof above is only for the general case, which is defined
 over 
\begin_inset Formula $(\mathcal{V},\,\tilde{s},\,d)$
\end_inset

 for finite subsets of 
\begin_inset Formula $\mathbb{R}^{n}$
\end_inset

, 
\begin_inset Formula $\mathcal{V}$
\end_inset

; and any
\begin_inset Formula $\tilde{s}\in\mathbb{R}^{n}$
\end_inset

, using any metric 
\begin_inset Formula $d$
\end_inset

.
 Thus the hardness result is only for the general case.
 Like for many problems from the knapsack family, there certainly exists
 special cases for which faster solutions are possible.
 For example 
\begin_inset Formula $\mathcal{V}\subset\mathbb{R}_{+}^{1}$
\end_inset

, 
\begin_inset Formula $\tilde{s}=\left[0\right]$
\end_inset

 and 
\begin_inset Formula $d=(x,y)\mapsto\left|x-y\right|$
\end_inset

, a linear time solution exists, found by finding the index of the smallest
 member of 
\begin_inset Formula $\mathcal{V}$
\end_inset

.
 The general problem however is not expected to have an exact solution in
 polynomial time.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "master"
options "amsplain"

\end_inset


\end_layout

\end_body
\end_document
